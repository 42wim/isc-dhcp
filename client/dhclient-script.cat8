


Maintenance Procedures                                dhclient(8)



NNNNAAAAMMMMEEEE
     dhclient-script - DHCP client network configuration script

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     The DHCP client network configuration script is invoked from
     time  to  time  by  ddddhhhhcccclllliiiieeeennnntttt((((8888)))).  This script is used by the
     dhcp client to set each  interface's  initial  configuration
     prior  to requesting an address, to test the address once it
     has been offered, and to set the  interface's  final  confi-
     guration  once  a  lease  has been acquired.  If no lease is
     acquired, the script is used to test predefined  leases,  if
     any,  and  also called once if no valid lease can be identi-
     fied.

     This script is not meant to be customized by the  end  user.
     However,  the  script may not work on particular versions of
     particular operating systems  (indeed,  no  standard  script
     exists for some operating systems), so a pioneering user may
     well need to create a new script or modify an existing  one.
     In general, customizations specific to a particular computer
     should be done in the ////eeeettttcccc////ddddhhhhcccclllliiiieeeennnntttt....ccccoooonnnnffff  script.    If  you
     find  that  you can't make such a customization without cus-
     tomizing dhclient.conf, please submit a bug report.

OOOOPPPPEEEERRRRAAAATTTTIIIIOOOONNNN
     When dhclient  needs  to  invoke  the  client  configuration
     script,  it  writes a shell script into /tmp which defines a
     variety of variables.  In all cases, $reason is set  to  the
     name  of  the  reason why the script has been invoked.   The
     following reasons are currently defined:   MEDIUM,  PREINIT,
     BOUND, RENEW, REBIND, REBOOT, EXPIRE, FAIL and TIMEOUT.

MMMMEEEEDDDDIIIIUUUUMMMM
     The DHCP client is requesting that an interface's media type
     be set.  The interface name is passed in $interface, and the
     media type is passed in $medium.

PPPPRRRREEEEIIIINNNNIIIITTTT
     The DHCP client is requesting that an interface  be  config-
     ured as required in order to send packets prior to receiving
     an actual address.   For clients which use  the  BSD  socket
     library,  this  means  configuring  the interface with an IP
     address   of   0.0.0.0   and   a   broadcast   address    of
     255.255.255.255.    For other clients, it may be possible to
     simply configure the interface up without actually giving it
     an  IP  address  at  all.    The interface name is passed in
     $interface, and the media type in $medium.

     If an IP alias  has  been  declared  in  dhclient.conf,  its
     address  will  be  passed  in $alias_ip_address, and that ip
     alias should be deleted from the interface, along  with  any
     routes to it.



SunOS 5.6                 Last change:                          1






Maintenance Procedures                                dhclient(8)



BBBBOOOOUUUUNNNNDDDD
     The DHCP client  has  done  an  initial  binding  to  a  new
     address.    The new ip address is passed in $new_ip_address,
     and the interface name is passed in $interface.   The  media
     type  is  passed in $medium.   Any options acquired from the
     server are passed using the option name described  in  ddddhhhhccccpppp----
     ooooppppttttiiiioooonnnnssss,  except  that  dashes  ('-') are replaced by under-
     scores ('_') in order to make valid shell variables, and the
     variable  names  start  with new_.   So for example, the new
     subnet mask would be passed in $new_subnet_mask.

     Before actually  configuring  the  address,  dhclient-script
     should  somehow ARP for it and exit with a nonzero status if
     it receives a reply.   In this case, the client will send  a
     DHCPDECLINE  message  to  the server and acquire a different
     address.   This may also be done in the  RENEW,  REBIND,  or
     REBOOT  states,  but  is not required, and indeed may not be
     desirable.

     When a binding has been completed, a lot of network  parame-
     ters   are   likely   to   need   to  be  set  up.    A  new
     /etc/resolv.conf needs to be created, using  the  values  of
     $new_domain_name  and  $new_domain_name_servers  (which  may
     list more than one server, seperated by spaces).   A default
     route  should  be  set using $new_routers, and static routes
     may need to be set up using $new_static_routes.

     If an IP alias has been declared, it must be  set  up  here.
     The  alias  IP address will be written as $alias_ip_address,
     and other DHCP options that are set  for  the  alias  (e.g.,
     subnet  mask) will be passed in variables named as described
     previously except starting with $alias_  instead  of  $new_.
     Care  should  be taken that the alias IP address not be used
     if   it   is   identical   to   the   bound    IP    address
     ($new_ip_address),  since  the other alias parameters may be
     incorrect in this case.

RRRREEEENNNNEEEEWWWW
     When a binding has been renewed, the script is called as  in
     BOUND, except that in addition to all the variables starting
     with $new_, there is another set of variables starting  with
     $old_.  Persistent settings that may have changed need to be
     deleted - for example, if a local route to the bound address
     is  being configured, the old local route should be deleted.
     If the default route has  changed,  the  old  default  route
     should  be  deleted.  If the static routes have changed, the
     old ones should be deleted.  Otherwise,  processing  can  be
     done as with BOUND.

RRRREEEEBBBBIIIINNNNDDDD
     The DHCP client has rebound to a new DHCP server.  This  can
     be  handled as with RENEW, except that if the IP address has



SunOS 5.6                 Last change:                          2






Maintenance Procedures                                dhclient(8)



     changed, the ARP table should be cleared.

RRRREEEEBBBBOOOOOOOOTTTT
     The DHCP client has successfully reacquired its old  address
     after a reboot.   This can be processed as with BOUND.

EEEEXXXXPPPPIIIIRRRREEEE
     The DHCP client has failed to renew its lease or  acquire  a
     new one, and the lease has expired.   The IP address must be
     relinquished, and all related parameters should be  deleted,
     as in RENEW and REBIND.

FFFFAAAAIIIILLLL
     The DHCP client has been unable to contact any DHCP servers,
     and  any  leases that have been tested have not proved to be
     valid.   The parameters from the last lease tested should be
     deconfigured.    This  can  be  handled  in  the same way as
     EXPIRE.

TTTTIIIIMMMMEEEEOOOOUUUUTTTT
     The DHCP client has been unable to contact any DHCP servers.
     However,  an  old lease has been identified, and its parame-
     ters have been passed in as with BOUND.   The client  confi-
     guration  script should test these parameters and, if it has
     reason to believe they are valid, should exit with  a  value
     of zero.   If not, it should exit with a nonzero value.

     The usual way to test a lease is to set up  the  network  as
     with  REBIND (since this may be called to test more than one
     lease) and then ping the first router defined  in  $routers.
     If  a  response is received, the lease must be valid for the
     network to which the interface is currently connected.    It
     would  be  more  complete  to try to ping all of the routers
     listed  in  $new_routers,  as  well  as  those   listed   in
     $new_static_routes, but current scripts do not do this.

FFFFIIIILLLLEEEESSSS
     Each operating system should generally have its  own  script
     file,  although  the script files for similar operating sys-
     tems may be similar or even identical.    The  script  files
     included  in the Internet Software Consortium DHCP distribu-
     tion appear in the distribution tree  under  client/scripts,
     and  bear  the  names of the operating systems on which they
     are intended to work.

BBBBUUUUGGGGSSSS
     If more than one interface is being used, there's no obvious
     way  to  avoid clashes between server-supplied configuration
     parameters - for example, the stock dhclient-script rewrites
     /etc/resolv.conf.   If more than one interface is being con-
     figured, /etc/resolv.conf will be repeatedly initialized  to
     the  values  provided  by  one  server,  and then the other.



SunOS 5.6                 Last change:                          3






Maintenance Procedures                                dhclient(8)



     Assuming the information provided by both servers is  valid,
     this  shouldn't  cause  any  real  problems, but it could be
     confusing.

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     dhclient(8),  dhcpd(8),  dhcrelay(8),  dhclient.conf(5)  and
     dhclient.leases(5).

AAAAUUUUTTTTHHHHOOOORRRR
     ddddhhhhcccclllliiiieeeennnntttt----ssssccccrrrriiiipppptttt((((8888))))  has  been  written  for   the   Internet
     Software  Consortium  by  Ted  Lemon  <mellon@fugue.com>  in
     cooperation with Vixie Enterprises.  To learn more about the
     Internet Software Consortium, see hhhhttttttttpppp::::////////wwwwwwwwwwww....vvvviiiixxxx....ccccoooommmm////iiiisssscccc.... To
     learn more about Vixie Enterprises, see hhhhttttttttpppp::::////////wwwwwwwwwwww....vvvviiiixxxx....ccccoooommmm....









































SunOS 5.6                 Last change:                          4



