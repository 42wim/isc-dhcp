#!/bin/sh

while [ $# != 0 ]; do
  if [ x$1 = x--with-nsupdate ]; then
    echo "nsupdate is always built now."
  else
   if [ x$1 = x--print-sysname ]; then
    print_sysname=yes
    else
     if [ x$sysname = x ]; then
       sysname=$1
      else
         echo "Unexpected argument: $1"
      fi
    fi
  fi
  shift
done

uname=`uname -s`
machine=`uname -m`

if [ "$sysname" = "" ]; then
  case $uname in
    AIX)
      sysname=aix;;
    Rhapsody)
      sysname=rhapsody;;
    ULTRIX)
      sysname=ultrix;;
    BSD/OS)
      release=`uname -r`
      minor=`echo $release |sed -e 's/[0-9]*\.\([0-9][0-9]*\)\(\..*\)*$/\1/'`
      major=`echo $release |sed -e 's/\([0-9][0-9]*\)\..*$/\1/'`
      
      case $major in
	[123]) sysname=bsdos ;;
	*) case $minor in
	     0) sysname=bsdos ;;
	     *) sysname=bsdos-4.1 ;;
	   esac;;
      esac;;
    OSF1)
      if [ $machine = 'alpha' ]; then
        sysname=alphaosf
      fi;;
    Linux)
      release=`uname -r`
      minor=`echo $release |sed -e 's/[0-9]*\.\([0-9][0-9]*\)\(\..*\)*$/\1/'`
      major=`echo $release |sed -e 's/\([0-9][0-9]*\)\..*$/\1/'`
      
      case $major in
	1) sysname=linux-1 ;;
	2) case $minor in
	     0) sysname=linux-2.0 ;;
	     1) sysname=linux-2.1 ;;
	     2) sysname=linux-2.2 ;;
	     *) sysname=linux-2.2 ;;
	   esac;;
      esac;;
    SunOS)
      release=`uname -r`
      minor=`echo $release |sed -e 's/.*[0-9]*\.\([0-9][0-9]*\).*$/\1/'`
      major=`echo $release |sed -e 's/\([0-9][0-9]*\)\..*$/\1/'`
      case $major in
        4) 
	  set `which gcc`
	  if [ $# != 1 ]; then
	    echo SunOS 4 build will not work without the GNU C Compiler.
	    exit 1
	  fi
	  sysname=sunos4;;
        5)
	  set `which gcc`
	  if [ $# = 1 ]; then
	    sysname=sunos5-gcc
	    sysname_print=sunos5
	  else
	    sysname=sunos5-cc
	    sysname_print=sunos5
	  fi;;
      esac;;
    NetBSD)
      hw=`uname -m`
      case $hw in
	arm32) sysname=netbsd-nocast;;
	alpha) sysname=netbsd-nocast;;
	*) sysname=netbsd;;
      esac;;
    OpenBSD)
      sysname=openbsd;;
    FreeBSD)
      sysname=freebsd;;
    hpux)
      set `which gcc`
	if [ $# = 1 ]; then
	  sysname=hpux-gcc
	  sysname_print=hpux
	else
	  sysname=hpux-cc
	  sysname_print=hpux
	fi;;
    HP-UX)
      set `which gcc`
	if [ $# = 1 ]; then
	  sysname=hpux-gcc
	  sysname_print=hpux
	else
	  sysname=hpux-cc
	  sysname_print=hpux
	fi;;
    QNX)
      sysname=qnx;;
    NEXTSTEP)
      sysname=nextstep;;
    UnixWare)
      sysname=uw7;;
  esac
fi

if [ "$sysname" = "" ]; then
  if [ x$print_sysname = xyes ]; then
    echo "unknown"
  else
    echo "UNIX name: $uname    machine: $machine"
    echo
    echo "Unknown system.   If this is an SCO system running ODT 3.0 or"
    echo "higher, type \`\`./configure sco''.   Otherwise, this is a"
    echo "configuration that isn't supported or hasn't been tested."
    echo
    echo "Supported configurations are:"
    echo "   aix		AIX 4.1.5.0"
    echo "   ultrix	ULTRIX 4.2A or higher"
    echo "   bsdos	BSDI BSD/OS 2.1"
    echo "   alphaosf	DEC Alpha OSF/1"
    echo "   linux	Linux"
    echo "   sunos4	Sunos 4.1.4 (earlier releases may work)"
    echo "   sunos5-cc	Solaris 2.4 or higher with Sun cc"
    echo "   sunos5-gcc	Solaris 2.4 or higher with gcc"
    echo "   netbsd	NetBSD 1.1 or higher"
    echo "   freebsd	FreeBSD"
    echo "   openbsd      OpenBSD (i386/alpha)"
    echo "   hpux		HP-UX"
    echo "   qnx		QNX 4.2 or higher"
    echo "   NEXTSTEP     NeXTSTEP"
    exit 1;
  fi
fi

if [ x$print_sysname = xyes ]; then
  if [ x$sysname_print != x ]; then
    echo $sysname_print
  else
    echo $sysname
  fi
  exit 0
fi

if [ x$sysname_print != x ]; then
  workname=work.${sysname_print}
else
  workname=work.${sysname}
fi

echo "System Type: $sysname"

if [ x$major != x ] && [ x$minor != x ]; then
  majversubst="-e /^##--majver--/,/^##--majver--/s/MajorVersion/$major/"
  minversubst="-e /^##--minver--/,/^##--minver--/s/MinorVersion/$minor/"
fi

if [ ! -d $workname ]; then
  mkdir $workname
fi

for foo in . client server relay common omapip dhcpctl minires dst; do
	if [ ! -d ${workname}/$foo ]; then
	  mkdir ${workname}/$foo
	fi
	(sed $majversubst $minversubst \
	      -e "/^##--${sysname}--/,/^##--${sysname}--/s/^#//" \
		<Makefile.conf; cat site.conf; \
		echo "TOP = ../.."; cat $foo/Makefile.dist)	\
				>${workname}/$foo/Makefile
done

# Make the link tree in which to actually build.
make links

exit 0
