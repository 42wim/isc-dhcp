


Maintenance Procedures                                   dhcpd(8)



NNNNAAAAMMMMEEEE
     dhcpd - Dynamic Host Configuration Protocol Server

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     ddddhhhhccccppppdddd [ ----pppp _p_o_r_t ] [ ----ffff ] [ ----dddd ] [ ----qqqq ] [ ----ccccffff _c_o_n_f_i_g-_f_i_l_e ] [
     ----llllffff _l_e_a_s_e-_f_i_l_e ] [ _i_f_0 [ ..._i_f_N ] ]

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     The Internet Software Consortium DHCP Server, dhcpd,  imple-
     ments the Dynamic Host Configuration Protocol (DHCP) and the
     Internet Bootstrap Protocol (BOOTP).  DHCP allows hosts on a
     TCP/IP  network to request and be assigned IP addresses, and
     also to discover information about the network to which they
     are  attached.   BOOTP  provides similar functionality, with
     certain restrictions.

CCCCOOOONNNNTTTTRRRRIIIIBBBBUUUUTTTTIIIIOOOONNNNSSSS
     Development of this software is funded through contributions
     and  support  contracts.    Please  see  ddddhhhhccccpppp----ccccoooonnnnttttrrrriiiibbbb((((5555)))) for
     information on how you can contribute.

OOOOPPPPEEEERRRRAAAATTTTIIIIOOOONNNN
     The DHCP protocol allows a host which is unknown to the net-
     work  administrator  to  be  automatically assigned a new IP
     address out of a pool of IP addresses for its network.    In
     order  for this to work, the network administrator allocates
     address pools in  each  subnet  and  enters  them  into  the
     dhcpd.conf(5) file.

     On startup, dhcpd reads the _d_h_c_p_d._c_o_n_f  file  and  stores  a
     list  of available addresses on each subnet in memory.  When
     a client requests an address using the DHCP protocol,  dhcpd
     allocates  an  address  for  it.   Each client is assigned a
     lease, which expires after an amount of time chosen  by  the
     administrator  (by default, one day).  Before leases expire,
     the clients to which leases are  assigned  are  expected  to
     renew  them in order to continue to use the addresses.  Once
     a lease has expired, the client  to  which  that  lease  was
     assigned  is  no  longer  permitted  to  use  the  leased IP
     address.

     In order to keep track of leases across system  reboots  and
     server  restarts,  dhcpd  keeps  a  list  of  leases  it has
     assigned in the dhcpd.leases(5) file.   Before dhcpd  grants
     a  lease  to  a  host, it records the lease in this file and
     makes sure that the contents of  the  file  are  flushed  to
     disk.    This  ensures  that  even  in the event of a system
     crash, dhcpd will not forget  about  a  lease  that  it  has
     assigned.    On  startup, after reading the dhcpd.conf file,
     dhcpd reads the dhcpd.leases  file  to  refresh  its  memory
     about what leases have been assigned.




SunOS 5.6                 Last change:                          1






Maintenance Procedures                                   dhcpd(8)



     New leases are appended to the end of the dhcpd.leases file.
     In  order  to  prevent  the  file  from becoming arbitrarily
     large, from time to time dhcpd creates  a  new  dhcpd.leases
     file  from  its  in-core lease database.  Once this file has
     been written to disk, the old file is renamed _d_h_c_p_d._l_e_a_s_e_s~,
     and  the  new  file is renamed dhcpd.leases.   If the system
     crashes  in  the   middle   of   this   process,   whichever
     dhcpd.leases  file remains will contain all the lease infor-
     mation, so there is no need for  a  special  crash  recovery
     process.

     BOOTP support is also provided by this server.  Unlike DHCP,
     the  BOOTP protocol does not provide a protocol for recover-
     ing dynamically-assigned addresses once they are  no  longer
     needed.     It  is  still  possible  to  dynamically  assign
     addresses to BOOTP clients, but some administrative  process
     for  reclaiming  addresses is required.   By default, leases
     are granted to BOOTP clients  in  perpetuity,  although  the
     network  administrator  may  set an earlier cutoff date or a
     shorter lease length for BOOTP leases if that makes sense.

     BOOTP clients may also be served in the  old  standard  way,
     which  is  to simply provide a declaration in the dhcpd.conf
     file for each BOOTP client, permanently assigning an address
     to each client.

     Whenever changes are made to the dhcpd.conf file, dhcpd must
     be restarted.   To restart dhcpd, send a SIGTERM (signal 15)
     to the process ID contained in /_e_t_c/_d_h_c_p_d._p_i_d, and then  re-
     invoke  dhcpd.   Because  the DHCP server database is not as
     lightweight as a BOOTP database, dhcpd  does  not  automati-
     cally restart itself when it sees a change to the dhcpd.conf
     file.

     Note: We get a lot of complaints about  this.    We  realize
     that  it  would  be  nice  if one could send a SIGHUP to the
     server and have it reload the database.   This is not techn-
     ically  impossible,  but  it  would  require a great deal of
     work, our resources are extremely limited, and they  can  be
     better  spent  elsewhere.    So  please don't complain about
     this on the mailing list unless you're prepared  to  fund  a
     project  to  implement  this  feature,  or prepared to do it
     yourself.

CCCCOOOOMMMMMMMMAAAANNNNDDDD LLLLIIIINNNNEEEE
     The names of the network interfaces on  which  dhcpd  should
     listen  for broadcasts may be specified on the command line.
     This should be done on systems  where  dhcpd  is  unable  to
     identify   non-broadcast   interfaces,  but  should  not  be
     required on other systems.  If no interface names are speci-
     fied  on  the  command  line dhcpd will identify all network
     interfaces  which  are   up,   elimininating   non-broadcast



SunOS 5.6                 Last change:                          2






Maintenance Procedures                                   dhcpd(8)



     interfaces  if  possible,  and listen for DHCP broadcasts on
     each interface.

     If dhcpd should listen on a port  other  than  the  standard
     (port  67),  the ----pppp flag may used.  It should be followed by
     the udp port number on which dhcpd should listen.   This  is
     mostly useful for debugging purposes.

     To run dhcpd as a foreground process, rather  than  allowing
     it  to run as a daemon in the background, the ----ffff flag should
     be specified.  This is useful when  running  dhcpd  under  a
     debugger, or when running it out of inittab on System V sys-
     tems.

     To have dhcpd log to the standard error descriptor,  specify
     the  ----dddd flag.  This can be useful for debugging, and also at
     sites where a complete log of all dhcp activity must be kept
     but  syslogd  is  not  reliable or otherwise cannot be used.
     Normally, dhcpd will log  all  output  using  the  syslog(3)
     function with the log facility set to LOG_DAEMON.

     Dhcpd can be made to use  an  alternate  configuration  file
     with  the  ----ccccffff flag, or an alternate lease file with the ----llllffff
     flag.   Because of the importance of using  the  same  lease
     database  at  all  times  when  running dhcpd in production,
     these options should be used oooonnnnllllyyyy for testing lease files or
     database files in a non-production environment.

     When starting dhcpd up from a system startup  script  (e.g.,
     /etc/rc),  it  may  not be desirable to print out the entire
     copyright message on startup.   To avoid printing this  mes-
     sage, the ----qqqq flag may be specified.

CCCCOOOONNNNFFFFIIIIGGGGUUUURRRRAAAATTTTIIIIOOOONNNN
     The  syntax  of  the   dhcpd.conf(5)   file   is   discussed
     seperately.    This section should be used as an overview of
     the configuration process, and the dhcpd.conf(5)  documenta-
     tion should be consulted for detailed reference information.

SSSSuuuubbbbnnnneeeettttssss
     dhcpd needs to know the subnet numbers and netmasks  of  all
     subnets  for  which it will be providing service.   In addi-
     tion, in order to dynamically allocate addresses, it must be
     assigned  one  or  more  ranges  of addresses on each subnet
     which it can in turn assign to client hosts  as  they  boot.
     Thus,  a  very  simple  configuration providing DHCP support
     might look like this:

          subnet 239.252.197.0 netmask 255.255.255.0 {
            range 239.252.197.10 239.252.197.250;
             }




SunOS 5.6                 Last change:                          3






Maintenance Procedures                                   dhcpd(8)



     Multiple address ranges may be specified like this:

          subnet 239.252.197.0 netmask 255.255.255.0 {
            range 239.252.197.10 239.252.197.107;
            range 239.252.197.113 239.252.197.250;
          }

     If a subnet will only be provided with BOOTP service and  no
     dynamic address assignment, the range clause can be left out
     entirely, but the subnet statement must appear.

LLLLeeeeaaaasssseeee LLLLeeeennnnggggtttthhhhssss
     DHCP leases can be assigned  almost  any  length  from  zero
     seconds to infinity.   What lease length makes sense for any
     given subnet, or  for  any  given  installation,  will  vary
     depending on the kinds of hosts being served.

     For example, in an  office  environment  where  systems  are
     added  from  time to time and removed from time to time, but
     move relatively infrequently, it might make sense  to  allow
     lease  times  of a month of more.   In a final test environ-
     ment on a manufacturing floor, it may  make  more  sense  to
     assign a maximum lease length of 30 minutes - enough time to
     go through a simple test procedure on  a  network  appliance
     before packaging it up for delivery.

     It is possible to specify two  lease  lengths:  the  default
     length that will be assigned if a client doesn't ask for any
     particular lease length, and a maximum lease length.   These
     are specified as clauses to the subnet command:

          subnet 239.252.197.0 netmask 255.255.255.0 {
            range 239.252.197.10 239.252.197.107;
            default-lease-time 600;
            max-lease-time 7200;
          |

     This particular subnet declaration specifies a default lease
     time  of 600 seconds (ten minutes), and a maximum lease time
     of 7200 seconds (two hours).   Other common values would  be
     86400 (one day), 604800 (one week) and 2592000 (30 days).

     Each subnet need not have the same lease-in the case  of  an
     office environment and a manufacturing environment served by
     the same DHCP server, it might make  sense  to  have  widely
     disparate values for default and maximum lease times on each
     subnet.

BBBBOOOOOOOOTTTTPPPP SSSSuuuuppppppppoooorrrrtttt
     Each  BOOTP  client  must  be  explicitly  declared  in  the
     dhcpd.conf  file.    A  very  basic  client declaration will
     specify the client network interface's hardware address  and



SunOS 5.6                 Last change:                          4






Maintenance Procedures                                   dhcpd(8)



     the  IP  address  to  assign to that client.   If the client
     needs to be able to load a boot file from the  server,  that
     file's  name  must  be  specified.    A  simple bootp client
     declaration might look like this:

          host haagen {
            hardware ethernet 08:00:2b:4c:59:23;
            fixed-address 239.252.197.9;
            filename "/tftpboot/haagen.boot";
          }

OOOOppppttttiiiioooonnnnssss
     DHCP (and also  BOOTP  with  Vendor  Extensions)  provide  a
     mechanism  whereby  the  server  can provide the client with
     information about how to  configure  its  network  interface
     (e.g.,  subnet  mask),  and  also  how the client can access
     various network services (e.g., DNS, IP routers, and so on).

     These options can be specified on a per-subnet  basis,  and,
     for  BOOTP  clients,  also  on  a per-client basis.   In the
     event that a BOOTP client declaration specifies options that
     are  also  specified  in its subnet declaration, the options
     specified in the client declaration  take  precedence.    An
     reasonably  complete DHCP configuration might look something
     like this:

          subnet 239.252.197.0 netmask 255.255.255.0 {
            range 239.252.197.10 239.252.197.250;
            default-lease-time 600 max-lease-time 7200;
            option subnet-mask 255.255.255.0;
            option broadcast-address 239.252.197.255;
            option routers 239.252.197.1;
            option domain-name-servers 239.252.197.2, 239.252.197.3;
            option domain-name "isc.org";
          }

     A bootp host on that subnet that needs to be in a  different
     domain  and use a different name server might be declared as
     follows:

          host haagen {
            hardware ethernet 08:00:2b:4c:59:23;
            fixed-address 239.252.197.9;
            filename "/tftpboot/haagen.boot";
            option domain-name-servers 192.5.5.1;
            option domain-name "vix.com";
          }

     A more complete description of the dhcpd.conf file syntax is
     provided in dhcpd.conf(5).





SunOS 5.6                 Last change:                          5






Maintenance Procedures                                   dhcpd(8)



FFFFIIIILLLLEEEESSSS
     ////eeeettttcccc////ddddhhhhccccppppdddd....ccccoooonnnnffff,,,,     ////eeeettttcccc////ddddhhhhccccppppdddd....lllleeeeaaaasssseeeessss,,,,      ////eeeettttcccc////ddddhhhhccccppppdddd....ppppiiiidddd,,,,
     ////eeeettttcccc////ddddhhhhccccppppdddd....lllleeeeaaaasssseeeessss~~~~....

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     dhclient(8), dhcrelay(8), dhcpd.conf(5), dhcpd.leases(5)

AAAAUUUUTTTTHHHHOOOORRRR
     ddddhhhhccccppppdddd((((8888)))) was written by Ted Lemon <mellon@vix.com>  under  a
     contract  with  Vixie  Labs.    Funding for this project was
     provided by the Internet Software  Consortium.   Information
     about  the  Internet  Software  Consortium  can  be found at
     hhhhttttttttpppp::::////////wwwwwwwwwwww....iiiisssscccc....oooorrrrgggg////iiiisssscccc....










































SunOS 5.6                 Last change:                          6



