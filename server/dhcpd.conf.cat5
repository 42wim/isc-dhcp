


dhcpd.conf(5)()                                   dhcpd.conf(5)()


NNAAMMEE
       dhcpd.conf - dhcpd configuration file

DDEESSCCRRIIPPTTIIOONN
       The dhcpd.conf file contains configuration information for
       _d_h_c_p_d_(_8_)_, the Dynamic Host Configuration Protocol  daemon.
       A  primer  on  configuring  dhcpd is included in dhcpd(8).
       This document describes the format of the file in  detail,
       and is probably a better reference than a primer.

       The  dhcpd.conf  file is a free-form ASCII text file.   It
       is parsed by a recursive-descent parser.    Statements  in
       the  file  may contain extra tabs and newlines for format-
       ting purposes.   Each statement in the file is  terminated
       by   a   semicolon.    Keywords  in  the  file  are  case-
       insensitive.

       There are currently two statements that  can  meaningfully
       appear  in  the  file--the  _s_u_b_n_e_t statement, and the _h_o_s_t
       statement.

TThhee SSUUBBNNEETT ssttaatteemmeenntt
       ssuubbnneett _s_u_b_n_e_t_-_n_u_m_b_e_r nneettmmaasskk _n_e_t_m_a_s_k [ _c_l_a_u_s_e_s ];

       _s_u_b_n_e_t_-_n_u_m_b_e_r should be an IP address or  DNS  name  which
       resolves   to  the  subnet  number  of  the  subnet  being
       described.  _n_e_t_m_a_s_k should be an IP address  or  DNS  name
       which  resolves  to  the  subnet  mask of the subnet being
       described. These are the only required fields in a  subnet
       declaration,  although  it  may be desirable to add one or
       more of the following clauses.

       Subnets for which addresses will be dynamically  allocated
       must  have one or more addresses reserved for future allo-
       cation by dhcpd.  These addresses are allocated using  the
       _r_a_n_g_e clause.

       rraannggee _l_o_w_e_s_t_-_a_d_d_r_e_s_s _h_i_g_h_e_s_t_-_a_d_d_r_e_s_s

       _l_o_w_e_s_t_-_a_d_d_r_e_s_s  should  be the lowest address in the range
       that may be assigned by dhcpd to a DHCP client.   _h_i_g_h_e_s_t_-
       _a_d_d_r_e_s_s  should  be  the highest address in the range that
       may be assigned by dhcpd.   If there is only  one  address
       in  a  range,  it must be specified as both the lowest and
       highest addresses.  As many rraannggee clauses  as  are  needed
       may be specified in any given ssuubbnneett statement.

       ddeeffaauulltt--lleeaassee--ttiimmee _t_i_m_e

       _t_i_m_e should be the expiration time in seconds that will be
       assigned to a lease if the  client  requesting  the  lease
       does not ask for a specific expiration time.   This clause
       may only appear once in each ssuubbnneett statement.




                                                                1





dhcpd.conf(5)()                                   dhcpd.conf(5)()


       mmaaxx--lleeaassee--ttiimmee _t_i_m_e

       _t_i_m_e should be the maximum expiration time in seconds that
       will  be  assigned to a lease if the client requesting the
       lease asks for a specific expiration time.    This  clause
       may only appear once in each ssuubbnneett statement.

       ooppttiioonn _o_p_t_i_o_n_-_d_e_c_l_a_r_a_t_i_o_n

       Any number of ooppttiioonn clauses may appear in a subnet state-
       ment.   The syntax of  option  declarations  is  described
       later in this document.

TThhee HHOOSSTT ssttaatteemmeenntt
       hhoosstt _h_o_s_t_n_a_m_e

       There  must be at least one hhoosstt statement for every BOOTP
       client that is to be served.  hhoosstt statements may also  be
       specified for DHCP clients, although this is not required.
       If it is desirable to be able to  boot  a  DHCP  or  BOOTP
       client  on more than one subnet with fixed addresses, more
       than one address may be  specified  in  the  ffiixxeedd--aaddddrreessss
       clause,  or more than one hhoosstt statement may be specified.
       If client-specific boot parameters must  change  based  on
       the network to which the client is attached, then multiple
       hhoosstt statements should be used.   If a  client  is  to  be
       booted  using a fixed address if it's possible, but should
       be allocated a dynamic  address  otherwise,  then  a  hhoosstt
       statement   must  be  specified  without  a  ffiixxeedd--aaddddrreessss
       clause.  _h_o_s_t_n_a_m_e should be a name identifying  the  host.
       It  is for labelling purposes only, and is not used in the
       BOOTP protocol.

       hhaarrddwwaarree _h_a_r_d_w_a_r_e_-_t_y_p_e _h_a_r_d_w_a_r_e_-_a_d_d_r_e_s_s

       In order for a BOOTP client to be recognized, its  network
       hardware  address must be declared using a hhaarrddwwaarree clause
       in the hhoosstt statement.   Only one such clause  can  appear
       in  any host statement.  _h_a_r_d_w_a_r_e_-_t_y_p_e must be the name of
       a physical hardware interface type.   Currently, only  the
       eetthheerrnneett  type  is recognized, although support for ttookkeenn--
       rriinngg and ffddddii hardware types  will  be  added  soon.   The
       _h_a_r_d_w_a_r_e_-_a_d_d_r_e_s_s  should  be  a  set of hexadecimal octets
       (numbers from 0 through ff) seperated by colons.

       ffiilleennaammee _f_i_l_e_n_a_m_e

       If the BOOTP client needs to load a boot file  (for  exam-
       ple,  a  kernel  or  configuration file), the name of this
       file may be provided to  the  client  using  the  ffiilleennaammee
       clause.    The  _f_i_l_e_n_a_m_e should be a filename recognizable
       to whatever file  transfer  protocol  the  client  can  be
       expected to use to load the file.




                                                                2





dhcpd.conf(5)()                                   dhcpd.conf(5)()


       ffiixxeedd--aaddddrreessss _a_d_d_r_e_s_s [, _a_d_d_r_e_s_s ]

       BOOTP  clients must be assigned fixed IP addresses.   DHCP
       clients may optionally be assigned a fixed address.    The
       ffiixxeedd--aaddddrreessss  clause  is  used  to  associate one or more
       fixed IP address with a BOOTP or DHCP  client.    If  more
       than  one address is supplied, the client may be booted on
       each network for which an address is specified.   Multiple
       addresses  on  the  same  network should not be specified.
       _a_d_d_r_e_s_s should be either an IP address or a DNS name which
       resolves to a single IP address.

       ooppttiioonn _o_p_t_i_o_n_-_d_e_c_l_a_r_a_t_i_o_n

       Any  number  of ooppttiioonn ccllaauusseess mmaayy aappppeeaarr iinn aa hhoosstt ssttaattee--
       mmeenntt..   TThhee ssyynnttaaxx ooff  option  declarations  is  described
       later  in  this  document.   If an option clause in a hhoosstt
       statement conflicts with an option clause  in  the  ssuubbnneett
       statement  for the subnet containing that host, the option
       clause in the hhoosstt statement is used.


OOppttiioonn DDeeccllaarraattiioonnss
       Option declarations always start with the ooppttiioonn  keyword,
       followed by an option name, followed by option data.   The
       option names and data formats are described below.    Many
       of the options described below which set IP or TCP parame-
       ters have default values which will  generally  work  per-
       fectly  well,  so  only those options whose values must be
       set explicitly should be included in.  B  subnet  or  hhoosstt
       statements.

       Option  data  comes in a variety of formats.   In order to
       avoid having to explain the formats along with each option
       definition  below,  a  number  of  data  types  have  been
       defined.

       The ip-address data type  can  be  entered  either  as  an
       explicit  IP address (e.g., 239.254.197.10) or as a domain
       name (e.g., haagen.isc.org).  When entering a domain name,
       be  sure  that  that  domain  name resolves to a single IP
       address.

       The int32 data type specifies  a  signed  32-bit  integer.
       The uint32 data type specifies an unsigned 32-bit integer.
       The  int16  and  uint16  data  types  specify  signed  and
       unsigned  16-bit integers.   The int8 and uint8 data types
       specify signed  and  unsigned  8-bit  integers.   Unsigned
       8-bit integers are also sometimes referred to as octets.

       The  string data type specifies an NVT ASCII string, which
       must be enclosed in double quotes - for example, to  spec-
       ify a domain-name option, the syntax would be




                                                                3





dhcpd.conf(5)()                                   dhcpd.conf(5)()


            option domain-name "isc.org"

       The flag data type specifies a one-bit (boolean) number.

       The  data-string  data  type specifies either an NVT ASCII
       string enclosed in double quotes, or a  series  of  octets
       specified in hexadecimal, seperated by colons.   For exam-
       ple:

            option client-identifier "CLIENT-FOO"
       or
            option client-identifier 43:4c:49:45:54:2d:46:4f:4f

       The documentation for the various options mentioned  below
       is  taken  from  the  latest  IETF  draft document on DHCP
       options.

       ooppttiioonn ssuubbnneett--mmaasskk _i_p_-_a_d_d_r_e_s_s

       The subnet mask option specifies the client's subnet  mask
       as per RFC 950.

       ooppttiioonn ttiimmee--ooffffsseett _i_n_t_3_2

       The   time-offset  option  specifies  the  offset  of  the
       client's subnet in seconds from Coordinated Universal Time
       (UTC).

       ooppttiioonn rroouutteerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       The  routers  option  specifies a list of IP addresses for
       routers on the client's subnet.  Routers should be  listed
       in order of preference.

       ooppttiioonn ttiimmee--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       The  time-server  option  specifies a list of RFC 868 time
       servers available to the client.  Servers should be listed
       in order of preference.

       ooppttiioonn nnaammee--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       The  name-servers  option specifies a list of IEN 116 name
       servers available to the client.  Servers should be listed
       in order of preference.

       ooppttiioonn ddoommaaiinn--nnaammee--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       The domain-name-servers option specifies a list of  Domain
       Name  System  (STD 13, RFC 1035) name servers available to
       the client.  Servers should be listed in order of  prefer-
       ence.

       ooppttiioonn lloogg--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]



                                                                4





dhcpd.conf(5)()                                   dhcpd.conf(5)()


       The  log-server option specifies a list of MIT-LCS UDP log
       servers available to the client.  Servers should be listed
       in order of preference.

       ooppttiioonn ccooookkiiee--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       The  cookie  server  option  specifies  a  list of RFC 865
       cookie servers available to the client.  Servers should be
       listed in order of preference.

       ooppttiioonn llpprr--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       The  LPR  server  option specifies a list of RFC 1179 line
       printer servers available to the client.   Servers  should
       be listed in order of preference.

       ooppttiioonn iimmpprreessss--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       The  impress-server  option  specifies  a  list  of Imagen
       Impress servers available to the client.   Servers  should
       be listed in order of preference.

       ooppttiioonn  rreessoouurrccee--llooccaattiioonn--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s
       _._._.  ]

       This option specifies a list of RFC 887 Resource  Location
       servers available to the client.  Servers should be listed
       in order of preference.

       ooppttiioonn hhoosstt--nnaammee _s_t_r_i_n_g

       This option specifies the name of the  client.   The  name
       may or may not be qualified with the local domain name (it
       is preferable to use the domain-name option to specify the
       domain  name).   See  RFC  1035 for character set restric-
       tions.

       ooppttiioonn bboooott--ssiizzee _u_i_n_t_1_6

       This option specifies the length in  512-octet  blocks  of
       the default boot image for the client.

       ooppttiioonn mmeerriitt--dduummpp _s_t_r_i_n_g

       This option specifies the path-name of a file to which the
       client's core image should be  dumped  in  the  event  the
       client  crashes.   The  path  is  formatted as a character
       string consisting of characters from the NVT ASCII charac-
       ter set.

       ooppttiioonn ddoommaaiinn--nnaammee _s_t_r_i_n_g

       This  option  specifies the domain name that client should
       use when resolving hostnames via the Domain Name System.



                                                                5





dhcpd.conf(5)()                                   dhcpd.conf(5)()


       ooppttiioonn sswwaapp--sseerrvveerr _i_p_-_a_d_d_r_e_s_s

       This specifies the IP address of the client's swap server.

       ooppttiioonn rroooott--ppaatthh _s_t_r_i_n_g

       This  option  specifies  the  path-name  that contains the
       client's root disk.  The path is formatted as a  character
       string consisting of characters from the NVT ASCII charac-
       ter set.

       ooppttiioonn iipp--ffoorrwwaarrddiinngg _f_l_a_g

       This option specifies whether the client should  configure
       its  IP  layer  for packet forwarding.  A value of 0 means
       disable IP forwarding, and a value of 1  means  enable  IP
       forwarding.

       ooppttiioonn nnoonn--llooccaall--ssoouurrccee--rroouuttiinngg _f_l_a_g

       This  option specifies whether the client should configure
       its IP layer to allow forwarding of  datagrams  with  non-
       local  source  routes (see Section 3.3.5 of [4] for a dis-
       cussion of this topic).  A value of 0 means disallow  for-
       warding  of  such  datagrams, and a value of 1 means allow
       forwarding.

       ooppttiioonn ppoolliiccyy--ffiilltteerr _i_p_-_a_d_d_r_e_s_s _i_p_-_a_d_d_r_e_s_s  [,  _i_p_-_a_d_d_r_e_s_s
       _i_p_-_a_d_d_r_e_s_s _._._.  ]

       This  option specifies policy filters for non-local source
       routing.  The filters consist of a list  of  IP  addresses
       and  masks which specify destination/mask pairs with which
       to filter incoming source routes.

       Any source routed datagram whose next-hop address does not
       match  one  of  the  filters  should  be  discarded by the
       client.

       See STD 3 (RFC1122) for further information.

       ooppttiioonn mmaaxx--ddggrraamm--rreeaasssseemmbbllyy _u_i_n_t_1_6

       This option specifies the maximum size datagram  that  the
       client  should  be  prepared  to  reassemble.  The minimum
       value legal value is 576.

       ooppttiioonn ddeeffaauulltt--iipp--ttttll _u_i_n_t_8

       This option specifies the default  time-to-live  that  the
       client should use on outgoing datagrams.

       ooppttiioonn ppaatthh--mmttuu--aaggiinngg--ttiimmeeoouutt _u_i_n_t_3_2




                                                                6





dhcpd.conf(5)()                                   dhcpd.conf(5)()


       This option specifies the timeout (in seconds) to use when
       aging Path MTU values discovered by the mechanism  defined
       in RFC 1191.

       ooppttiioonn ppaatthh--mmttuu--ppllaatteeaauu--ttaabbllee _u_i_n_t_1_6 [, _u_i_n_t_1_6 _._._.  ]

       This  option  specifies  a  table of MTU sizes to use when
       performing Path MTU Discovery as defined in RFC 1191.  The
       table  is formatted as a list of 16-bit unsigned integers,
       ordered from smallest to largest.  The minimum  MTU  value
       cannot be smaller than 68.

       ooppttiioonn iinntteerrffaaccee--mmttuu _u_i_n_t_1_6

       This  option  specifies  the MTU to use on this interface.
       The minimum legal value for the MTU is 68.

       ooppttiioonn  aallll--ssuubbnneettss--llooccaall  _f_l_a_g  This   option   specifies
       whether  or  not the client may assume that all subnets of
       the IP network to which the client is  connected  use  the
       same MTU as the subnet of that network to which the client
       is directly connected.  A value of 1  indicates  that  all
       subnets  share  the same MTU.  A value of 0 means that the
       client should assume that some  subnets  of  the  directly
       connected network may have smaller MTUs.

       ooppttiioonn bbrrooaaddccaasstt--aaddddrreessss _i_p_-_a_d_d_r_e_s_s

       This  option specifies the broadcast address in use on the
       client's subnet.  Legal values for broadcast addresses are
       specified in section 3.2.1.3 of STD 3 (RFC1122).

       ooppttiioonn ppeerrffoorrmm--mmaasskk--ddiissccoovveerryy _f_l_a_g

       This  option  specifies  whether  or not the client should
       perform subnet mask discovery using ICMP.  A  value  of  0
       indicates  that the client should not perform mask discov-
       ery.  A value of 1 means that the  client  should  perform
       mask discovery.

       ooppttiioonn mmaasskk--ssuupppplliieerr _f_l_a_g

       This  option  specifies  whether  or not the client should
       respond to subnet mask requests using ICMP.  A value of  0
       indicates  that the client should not respond.  A value of
       1 means that the client should respond.

       ooppttiioonn rroouutteerr--ddiissccoovveerryy _f_l_a_g

       This option specifies whether or  not  the  client  should
       solicit  routers  using  the  Router  Discovery  mechanism
       defined in RFC 1256.  A value  of  0  indicates  that  the
       client  should not perform router discovery.  A value of 1
       means that the client should perform router discovery.



                                                                7





dhcpd.conf(5)()                                   dhcpd.conf(5)()


       ooppttiioonn rroouutteerr--ssoolliicciittaattiioonn--aaddddrreessss _i_p_-_a_d_d_r_e_s_s

       This option specifies the  address  to  which  the  client
       should transmit router solicitation requests.

       ooppttiioonn  ssttaattiicc--rroouutteess  _i_p_-_a_d_d_r_e_s_s _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s
       _i_p_-_a_d_d_r_e_s_s _._._.  ]

       This option specifies a list of  static  routes  that  the
       client  should  install in its routing cache.  If multiple
       routes to the same destination  are  specified,  they  are
       listed in descending order of priority.

       The  routes  consist  of  a list of IP address pairs.  The
       first address is the destination address, and  the  second
       address is the router for the destination.

       The  default route (0.0.0.0) is an illegal destination for
       a static route.  To specify the  default  route,  use  the
       rroouutteerrss option.

       ooppttiioonn ttrraaiilleerr--eennccaappssuullaattiioonn _f_l_a_g

       This  option  specifies  whether  or not the client should
       negotiate the use of trailers (RFC 893  [14])  when  using
       the  ARP protocol.  A value of 0 indicates that the client
       should not attempt to use trailers.  A value  of  1  means
       that the client should attempt to use trailers.

       ooppttiioonn aarrpp--ccaacchhee--ttiimmeeoouutt _u_i_n_t_3_2

       This option specifies the timeout in seconds for ARP cache
       entries.

       ooppttiioonn iieeeeee880022--33--eennccaappssuullaattiioonn _f_l_a_g

       This option specifies whether or not the client should use
       Ethernet  Version  2  (RFC  894)  or IEEE 802.3 (RFC 1042)
       encapsulation if the interface is an Ethernet.  A value of
       0  indicates that the client should use RFC 894 encapsula-
       tion.  A value of 1 means that the client should  use  RFC
       1042 encapsulation.

       ooppttiioonn ddeeffaauulltt--ttccpp--ttttll _u_i_n_t_8

       This  option  specifies  the  default  TTL that the client
       should use when sending TCP segments.  The  minimum  value
       is 1.

       ooppttiioonn ttccpp--kkeeeeppaalliivvee--iinntteerrvvaall _u_i_n_t_3_2

       This  option  specifies the interval (in seconds) that the
       client TCP should wait before sending a keepalive  message
       on  a  TCP  connection.  The time is specified as a 32-bit



                                                                8





dhcpd.conf(5)()                                   dhcpd.conf(5)()


       unsigned integer.  A value  of  zero  indicates  that  the
       client  should  not generate keepalive messages on connec-
       tions unless specifically requested by an application.

       ooppttiioonn ttccpp--kkeeeeppaalliivvee--ggaarrbbaaggee _f_l_a_g

       This option specifies the whether or not the client should
       send  TCP  keepalive  messages with a octet of garbage for
       compatibility with older implementations.  A  value  of  0
       indicates that a garbage octet should not be sent. A value
       of 1 indicates that a garbage octet should be sent.

       ooppttiioonn nniiss--ddoommaaiinn _s_t_r_i_n_g

       This option specifies the name of the  client's  NIS  (Sun
       Network  Information Services) domain.  The domain is for-
       matted as a character string consisting of characters from
       the NVT ASCII character set.

       ooppttiioonn nniiss--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       This  option  specifies  a list of IP addresses indicating
       NIS servers available to the client.   Servers  should  be
       listed in order of preference.

       ooppttiioonn nnttpp--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       This  option  specifies  a list of IP addresses indicating
       NTP (RFC 1035) servers available to the  client.   Servers
       should be listed in order of preference.

       ooppttiioonn  nneettbbiiooss--nnaammee--sseerrvveerrss  _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.
       ]

       The NetBIOS name server (NBNS) option specifies a list  of
       RFC 1001/1002 NBNS name servers listed in order of prefer-
       ence.

       ooppttiioonn nneettbbiiooss--dddd--sseerrvveerr _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       The NetBIOS datagram  distribution  server  (NBDD)  option
       specifies  a  list of RFC 1001/1002 NBDD servers listed in
       order of preference.

       ooppttiioonn nneettbbiiooss--nnooddee--ttyyppee _u_i_n_t_8

       The NetBIOS node type option allows  NetBIOS  over  TCP/IP
       clients   which  are  configurable  to  be  configured  as
       described in RFC 1001/1002.  The value is specified  as  a
       single octet which identifies the client type.  A value of
       1 corresponds to a NetBIOS B-node; a  value  of  2  corre-
       sponds to a P-node; a value of 4 corresponds to an M-node;
       a value of 8 corresponds to an H-node.




                                                                9





dhcpd.conf(5)()                                   dhcpd.conf(5)()


       ooppttiioonn nneettbbiiooss--ssccooppee _s_t_r_i_n_g

       The NetBIOS scope option specifies the NetBIOS over TCP/IP
       scope  parameter  for  the  client  as  specified  in  RFC
       1001/1002. See RFC1001, RFC1002, and RFC1035  for  charac-
       ter-set restrictions.

       ooppttiioonn ffoonntt--sseerrvveerrss _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       This  option  specifies  a  list  of  X Window System Font
       servers available to the client. Servers should be  listed
       in order of preference.

       ooppttiioonn xx--ddiissppllaayy--mmaannaaggeerr _i_p_-_a_d_d_r_e_s_s [, _i_p_-_a_d_d_r_e_s_s _._._.  ]

       This  option  specifies a list of systems that are running
       the X Window System Display Manager and are  available  to
       the  client.  Addresses should be listed in order of pref-
       erence.

       ooppttiioonn ddhhccpp--cclliieenntt--iiddeennttiiffiieerr _d_a_t_a_-_s_t_r_i_n_g

       This option can be used to specify the a DHCP client iden-
       tifier  in  a host declaration, so that dhcpd can find the
       host record by matching against the client identifier.

SSEEEE AALLSSOO
       dhcpd.conf(5), dhcpd.leases(5)

AAUUTTHHOORR
       ddhhccppdd((88)) was written by Ted Lemon <mellon@vix.com> under a
       contract  with  Vixie Labs.   Funding for this project was
       provided by the Internet Software  Corporation.   Informa-
       tion  about  the Internet Software Consortium can be found
       at hhttttpp::////wwwwww..iisscc..oorrgg//iisscc..






















                                                               10


