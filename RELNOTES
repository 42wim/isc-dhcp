		     Internet Software Consortium
	   Dynamic Host Configuration Protocol Distribution
		      Version 3, Alpha Snapshot
			  February 25, 1999

			    Release Notes

This is a development snapshot of Version 3 of the Internet Software
Consortium DHCP Distribution.

				PLANS

Version 1 of the ISC DHCP Distribution includes just a DHCP Server.
Version 1 has been in feature freeze since late 1996, and is quite
stable.  This is the release that we would expect very conservative
sites to run in production, but it is no longer recommended.

Version 2 of the ISC DHCP Distribution adds a DHCP Client and a
DHCP/BOOTP Relay Agent to the DHCP Server that was offered in version
1.0.   In addition, some new capabilities have been added to the
server:

	- IP addresses are now tested before they are assigned to
	  clients.   This allows the DHCP server to detect rogue
	  machines that may have hijacked IP addresses before an IP
	  address conflict can occur.

	- The server may be configured so that some DHCP clients can
	  be excluded from booting.

	- Improved NAKing behaviour, so that clients that are using
	  addresses other than the one the server knows they should be
	  using are disciplined quickly.

This version has been in a near feature freeze since January of 1998,
has been in Beta test since then, and is planned for final release in
mid-1999.  It has a number of important features, and is the release
that we would expect most sites to run.  It is possible to run the
Version 1 server with the Version 2 client at sites that want to be
really conservative.

Version 3 of the ISC DHCP Distribution will add conditional behaviour,
client classing, Dynamic DNS Support, DHCPv4 16-bit option codes,
asynchronous DNS query resolution, DHCP Authentication, and possibly
support for a DHCP Interserver Protocol and live querying of the DHCP
database.  Currently, only client classing and conditional behaviour
have been implemented - the DNS code is waiting for an enhanced DNS
resolver.  The code has gone through a major internal restructuring
which will help to support wider option codes, and possibly IPv6, as
well as a more sensible memory allocation strategy.  This release is
running in producion at the ISC, but is not expected to be stable in
the near future, and is intended for sites that are in a position to
experiment, or for sites that desperately need the new features.

		      CHANGES SINCE VERSION 2.0

- Support for conditional behaviour - i.e., what the client sends can
  be used to determine what response the client gets, in a very
  general way.

- Support for client classing - that is, clients can be assigned to
  classes based on what they send, and then address assignments can be
  made based on the client's class.   A per-class limit on the number
  of addresses assignable can be made.   It is possible to create new
  classes on the fly based on a template, so that address limitations
  can be done on a per-customer basis - e.g., when using relay agent
  options, a particular customer's circuit ID can be used to classify
  all hosts at the customer site as part of a class which is generated
  on the fly the first time the circuit ID is seen.   The class
  template from which this class is created can specify a limit of,
  say, four leases.   This would have the effect of limiting all
  customer sites behind relay agents that attach circuit IDs to the
  packets they forward to a maximum of four leases each.

- Support for DHCP authentication.   This is based on code contributed
  by the University of Pennsylvania, written by XXX

- Memory allocation behaviour has been completely redone.

- Support for more than one pool of addresses per network segment.
  This permits clients to be allocated addresses out of different
  ranges, even within a subnet, based on what classes they're in,
  whether or not they are known (have host declarations), whether or
  not they have authenticated, and that sort of thing.   Parameters,
  including things like lease times and also things like options to be
  sent to the client, can vary from address pool to address pool.

